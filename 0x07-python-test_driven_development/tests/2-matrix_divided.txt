The matrix_divided Module
=========================
This provides a function called 'matrix_divided' that divides each element in a matrix.

Using the function
------------------

# Import the matrix_divided function from the module
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test cases for matrix_divided function

# Test case 1: Division by 3
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> result = matrix_divided(matrix, 3)
>>> result
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix  # Original matrix should remain unchanged
[[1, 2, 3], [4, 5, 6]]

# Test case 2: Division by 2.5
>>> matrix = [[6, 9, 12], [15, 18, 21]]
>>> result = matrix_divided(matrix, 2.5)
>>> result
[[2.4, 3.6, 4.8], [6.0, 7.2, 8.4]]
>>> matrix  # Original matrix should remain unchanged
[[6, 9, 12], [15, 18, 21]]

# Test case 3: Division by 0 (should raise ZeroDivisionError)
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test case 4: Non-numeric division (should raise TypeError)
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, 'divisor')
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test case 5: Non-matrix input (should raise TypeError)
>>> matrix = "not a matrix"
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
